name: 'CI'

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-lint-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-lint-${{ env.cache-name }}-
      - run: npm ci
      - run: npm run lint

  test:
    runs-on: ubuntu-latest
    env:
      ADDRESS_FILE: ${{ github.workspace }}/.ocean/ocean-contracts/artifacts/address.json
      AQUARIUS_URI: http://172.15.0.5:5000
      # AQUARIUS_URI: http://127.0.0.1:5000

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-test-${{ env.cache-name }}-
      - run: npm ci
      - run: npm run build:metadata

      - name: Checkout Barge
        uses: actions/checkout@v2
        with:
          repository: 'oceanprotocol/barge'
          path: 'barge'

      - name: Login to Docker Hub
        if: ${{ env.DOCKERHUB_PASSWORD && env.DOCKERHUB_USERNAME }}
        run: |
          echo "Login to Docker Hub";echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Prepare ~/.ocean
        run: |
          mkdir ${{ github.workspace }}/.ocean/ &&
          mkdir ${{ github.workspace }}/.ocean/ocean-contracts/ &&
          mkdir ${{ github.workspace }}/.ocean/ocean-contracts/artifacts &&
          touch ${{ github.workspace }}/.ocean/ocean-contracts/artifacts/address.json &&
          echo "{}" >> ${{ github.workspace }}/.ocean/ocean-contracts/artifacts/address.json

      - name: Run Barge
        working-directory: ${{ github.workspace }}/barge
        run: |
          bash -x start_ocean.sh --with-provider2 --no-dashboard 2>&1 > start_ocean.log &
          cd .. && ./scripts/waitforcontracts.sh

      - name: Check running containers
        run: docker ps -a
      - run: npm run test:unit:cover
      - run: npm run test:integration:cover
      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        node: ['15', '16']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ matrix.node }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node }}-build-${{ env.cache-name }}-
      - run: npm ci
      - run: npm run build

  coverage:
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: coverage
      - uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/coverage/unit/lcov.info:lcov
            ${{github.workspace}}/coverage/integration/lcov.info:lcov
