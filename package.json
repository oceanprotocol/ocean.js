{
  "name": "@oceanprotocol/lib",
  "source": "./src/index.ts",
  "version": "3.3.0",
  "description": "JavaScript client library for Ocean Protocol",
  "main": "./dist/lib.js",
  "umd:main": "dist/lib.umd.js",
  "module": "./dist/lib.module.js",
  "exports": {
    "require": "./dist/lib.js",
    "default": "./dist/lib.modern.js"
  },
  "types": "./dist/src/index.d.ts",
  "scripts": {
    "start": "npm run clean && npm run build:metadata && tsc -w",
    "build": "npm run clean && npm run build:metadata && microbundle build --format modern,esm,cjs,umd --compress --tsconfig tsconfig.json",
    "build:tsc": "tsc --sourceMap",
    "build:metadata": "node ./scripts/get-metadata.js > src/metadata.json",
    "clean": "rm -rf ./dist/ ./doc/ ./.nyc_output",
    "lint": "eslint --ignore-path .gitignore --ext .ts,.tsx . && npm run type-check",
    "lint:fix": "eslint --ignore-path .gitignore --ext .ts,.tsx . --fix",
    "format": "prettier --parser typescript --ignore-path .gitignore --write '**/*.{js,jsx,ts,tsx}'",
    "type-check": "npm run build:metadata && tsc --noEmit",
    "doc:json": "node ./scripts/typedoc.js",
    "docs": "typedoc --options typedoc.json --plugin typedoc-plugin-markdown",
    "run": "ts-node",
    "release": "release-it --non-interactive",
    "changelog": "auto-changelog -p",
    "prepublishOnly": "npm run build",
    "mocha": "TS_NODE_PROJECT='./test/tsconfig.json' mocha --config=test/.mocharc.json --node-env=test --exit",
    "test": "npm run lint && npm run test:unit:cover && npm run test:integration:cover",
    "test:unit": "npm run mocha -- 'test/unit/**/*.test.ts'",
    "test:integration": "npm run mocha --  'test/integration/**/*.test.ts'",
    "test:unit:cover": "nyc --report-dir coverage/unit npm run test:unit",
    "test:integration:cover": "nyc --report-dir coverage/integration --no-clean npm run test:integration",
    "create:guide": "./scripts/createCodeExamples.sh test/integration/CodeExamples.test.ts",
    "create:guidec2d": "./scripts/createCodeExamples.sh test/integration/ComputeExamples.test.ts",
    "commit:guides": "./scripts/commitChanges.sh",
    "commit:docs": "./scripts/updateDocs.sh"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/oceanprotocol/ocean.js.git"
  },
  "keywords": [],
  "author": "Ocean Protocol <devops@oceanprotocol.com>",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/oceanprotocol/ocean.js/issues"
  },
  "homepage": "https://github.com/oceanprotocol/ocean.js#readme",
  "peerDependencies": {
    "web3": "^1.8.0"
  },
  "dependencies": {
    "@oceanprotocol/contracts": "^2.0.3",
    "cross-fetch": "^4.0.0",
    "crypto-js": "^4.1.1",
    "decimal.js": "^10.4.1",
    "ethers": "^5.7.2"
  },
  "devDependencies": {
    "@truffle/hdwallet-provider": "^2.0.14",
    "@types/chai": "^4.3.1",
    "@types/chai-spies": "^1.0.3",
    "@types/crypto-js": "^4.1.1",
    "@types/mocha": "^10.0.0",
    "@types/node": "^18.0.1",
    "@types/node-fetch": "^3.0.3",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "auto-changelog": "^2.4.0",
    "chai": "^4.3.6",
    "chai-spies": "^1.0.0",
    "cross-env": "^7.0.3",
    "eslint": "^8.23.1",
    "eslint-config-oceanprotocol": "^2.0.3",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^4.2.1",
    "fs": "0.0.1-security",
    "microbundle": "0.14.2",
    "mocha": "^10.0.0",
    "mock-local-storage": "^1.1.21",
    "nyc": "^15.1.0",
    "ora": "5.4.1",
    "prettier": "^2.7.1",
    "release-it": "^15.4.2",
    "source-map-support": "^0.5.19",
    "ts-node": "^10.9.1",
    "ts-node-register": "^1.0.0",
    "typedoc": "^0.25.1",
    "typedoc-plugin-markdown": "^3.15.2",
    "typescript": "^5.1.6"
  },
  "nyc": {
    "include": [
      "src/**/*.ts"
    ],
    "exclude": [
      "src/@types/**/*",
      "test/**/*"
    ],
    "extension": [
      ".ts"
    ],
    "require": [
      "ts-node/register"
    ],
    "reporter": [
      "text",
      "lcov",
      "html"
    ],
    "sourceMap": true,
    "instrument": true
  },
  "release-it": {
    "hooks": {
      "after:bump": "npm run build && npm run changelog && npm run doc:json"
    },
    "plugins": {},
    "git": {
      "tagName": "v${version}"
    },
    "github": {
      "release": true,
      "assets": [
        "dist/lib.json"
      ]
    },
    "npm": {
      "publish": false
    }
  }
}
